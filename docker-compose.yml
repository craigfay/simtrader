version: '3'
services:
    database:
        image: postgres:11.5
        restart: always
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: pass
            POSTGRES_DB: db
        networks:
            - app-network
        volumes:
            - ./services/database/data:/data/
            # All SQL files in /docker-entrypoint-initdb.d will be automatically
            # executed in alphabetical order by Postgres upon initialization.
            - ./services/database/migrations:/docker-entrypoint-initdb.d/

    graphql:
        build:
            # This container is built from a local Dockerfile, as opposed to
            # pulling a more generic image from Docker Hub
            context: "./services/graphql"
        restart: unless-stopped
        volumes:
            - ./services/graphql:/graphql
        working_dir: /graphql/
        networks:
            - app-network
        depends_on:
            - database
        ports:
            - 5000:5000
        command: " \
            npx postgraphile \
            -c postgres://postgraphile:change_me@database:5432/db \
            --host \"0.0.0.0\" \
            --default-role anonymous \
            --token public.jwt_token \
            --secret change_me_too
            "

    api:
        build:
            context: ./services/api
        depends_on:
            - graphql
        ports:
            - 80:80
        networks:
            - app-network
        working_dir: /api
        # command: ls
        command: 'npx ts-node src/main.js'
        
# Docker networks allow containers to communicate with one another
networks:
  app-network:
    driver: bridge 
